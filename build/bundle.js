!function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:s})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);var s=class extends HTMLElement{constructor(){super(),this.createdCallback()}createdCallback(){this.setAttribute("class","dashboard dashboard__content g-all-height"),this.innerHTML='<div class="header">\n                <div class="header__game">\n                    <button class="button button_new-game">New game</button>\n                </div>\n                <div class="header_timer">\n                    <div class="timer"></div>\n                </div>\n                <div class="header__user">\n                    <button class="button button_profile">Profile</button>\n                    <button class="button button_rating">Rating</button>\n                </div>\n            </div>\n            <div class="dashboard__body"></div>',this.body=this.querySelector(".dashboard__body"),this.timer=this.querySelector(".timer"),this.addListeners()}renderBody(t){return this.body.innerHTML="",this.body.appendChild(t),this.body}addListeners(){this.newGameButton=this.querySelector(".button_new-game"),this.newGameButton.addEventListener("click",()=>{this.dispatchEvent(new CustomEvent("newGame",{bubbles:!0}))}),this.profileButton=this.querySelector(".button_profile"),this.profileButton.addEventListener("click",()=>{}),this.ratingButton=this.querySelector(".button_rating"),this.ratingButton.addEventListener("click",()=>{})}};const n="GameCurrentUser";var a=class extends HTMLElement{constructor(){super();const t=window.localStorage[n];this.data=t?JSON.parse(t):{firstName:"",lastName:"",email:"",score:[]},this.createdCallback()}createdCallback(){this.setAttribute("class","profile g-all-height"),this.innerHTML=`<form class="profile__form form">\n                <div class="input-block profile__input-block">\n                    <label class="label">Имя:</label>\n                    <input class="input" name="firstName" type="text" value="${this.data.firstName}" required>\n                </div>\n                <div class="input-block profile__input-block" >\n                    <label class="label">Фамилия:</label>\n                    <input class="input" name="lastName" type="text" value="${this.data.lastName}" required>\n                </div>\n                <div class="input-block profile__input-block">\n                    <label class="label">Email:</label>\n                    <input class="input" name="email" type="email" value="${this.data.email}" required>\n                </div>\n                <div class="input-block profile__input-block">\n                    <input type="submit" class="save-button button" value="Сохранить данные"></button>\n                </div>\n            </form>`,this.saveButton=this.querySelector(".save-button"),this.form=this.querySelector(".form"),this.addListeners()}addListeners(){this.saveButton.addEventListener("click",t=>{this.form.checkValidity()&&(t.preventDefault(),this.data.firstName=this.form.firstName.value,this.data.lastName=this.form.lastName.value,this.data.email=this.form.email.value,this.save(),this.dispatchEvent(new CustomEvent("profileSaved",{detail:this.data,bubbles:!0})))})}save(){window.localStorage[n]=JSON.stringify(this.data)}};var l=class extends HTMLElement{constructor(){super(),this.createdCallback()}createdCallback(){this.complexities={novice:{x:4,y:3},medium:{x:6,y:4},advance:{x:6,y:6}},this.setAttribute("class","setting g-all-height"),this.innerHTML=`<h1>Настройки игры</h2>\n        <div class="setting__body">\n            <div class="setting__block setting__block_complexity">\n                <h2 class="setting__title">Сложность: </h2>\n                <div data-complexity="novice" class="setting__item setting__item_novice">                    \n                    ${this.renderComplexityTable(this.complexities.novice)}                    \n                </div>\n                <div data-complexity="advance" class="setting__item setting__item_advance">\n                    ${this.renderComplexityTable(this.complexities.advance)}                    \n                </div>\n                <div data-complexity="medium" class="setting__item setting__item_medium">\n                    ${this.renderComplexityTable(this.complexities.medium)}                    \n                </div>\n            </div>\n            <div class="setting__block setting__block_background">\n                <h2 class="setting__title">Рубашка: </h2>\n                <div data-background="cars" class="setting__item setting__item_cars">                    \n                </div>\n                <div data-background="football" class="setting__item setting__item_football">                    \n                </div>\n                <div data-background="got" class="setting__item setting__item_got">                    \n                </div>\n            </div>\n        </div>\n        <div>\n            <button class="setting__save-button button">Сохранить и играть</button>\n        </div>`,this.saveButton=this.querySelector(".setting__save-button"),this.addListeners()}renderComplexityTable(t){let e=document.createElement("table");e.classList.add("complexity");for(let i=1;i<=t.y;i++){let s=document.createElement("tr");for(let e=1;e<=t.x;e++){let t=document.createElement("td");t.textContent=`${i} x ${e}`,s.appendChild(t)}e.appendChild(s)}return e.outerHTML}addListeners(){this.settingBody=this.querySelector(".setting__body"),this.settingBody.addEventListener("click",t=>{let e=t.target.classList.contains("setting__item")?t.target:t.target.closest(".setting__item");e&&(this.complexity=e.dataset.complexity?e.dataset.complexity:this.complexity,this.background=e.dataset.background?e.dataset.background:this.background,e.parentElement.querySelectorAll(".setting__item").forEach(t=>{t.classList.remove("setting__item_selected")}),e.classList.add("setting__item_selected"))}),this.saveButton.addEventListener("click",t=>{this.dispatchEvent(new CustomEvent("settingSaved",{bubbles:!0,detail:{complexity:this.complexities[this.complexity],background:this.background}}))})}};var d=class extends HTMLElement{constructor(){super(),this.createdCallback()}createdCallback(){this.classList.add("start","g-all-height"),this.innerHTML=' <div class="greeting">\n                Приветствую!\n            </div>\n            <div class="rules">\n                <h2 class="title">Правила игры: </h2>\n                <p class="rules__rule">Вы должны найти все пары карт за 2 минуты.</p>\n                <p class="rules__rule">Для старта необходимо ввести пользовательские данные.</p>\n            </div> \n            <div>\n                <button class="button button_fillin">Заполнить данные</button>\n            </div>',this.addListeners()}addListeners(){this.fillButton=this.querySelector(".button_fillin"),this.fillButton.addEventListener("click",function(t){this.dispatchEvent(new CustomEvent("fillClick",{bubbles:!0,detail:this.event}))})}};var r=class extends HTMLElement{constructor(t,e){super(),this.complexity=t,this.background=e,this.size=this.complexity.x*this.complexity.y,this.previousClickedCell,this.blocked=!1,this.left=this.size,this.fillIn(),this.createdCallback()}createdCallback(){this.setAttribute("class","battlefield battlefield__content g-all-height"),this.style=`grid-template: repeat(${this.complexity.y}, 1fr) / repeat(${this.complexity.x}, 1fr)`;for(let t=0;t<this.size;t++){let e=document.createElement("div");e.setAttribute("class",`battlefield__cell battlefield__cell_${this.background}`),e.dataset.index=t,this.appendChild(e)}this.addListeners()}fillIn(){this.field=new Array(this.size).fill(0);let t=Array.randomInt(this.size/2,1,10);(t=t.concat(t)).forEach(t=>{const e=this.field.map((t,e)=>({value:t,index:e})).filter(t=>0===t.value).map(t=>t.index);if(e.length){const i=e[Number.randomInt(0,e.length-1)];this.field[i]=t}})}addListeners(){this.addEventListener("click",t=>{let e=t.target;if(e.classList.contains("battlefield__cell")){if(e.classList.contains("battlefield__cell_hidden")||e.style.backgroundImage||this.blocked)return;const t=e.dataset.index,i=this.field[t];e.style.backgroundImage=`url("./img/${this.background}/${i}.png")`,this.previousClickedCell?(this.blocked=!0,i===this.field[this.previousClickedCell.dataset.index]?(this.left=this.left-2,0==this.left?this.dispatchEvent(new CustomEvent("finishGame",{details:{score:this.size,won:!0},bubbles:!0})):(this.blocked=!1,setTimeout(()=>{e.classList.add("battlefield__cell_hidden"),this.previousClickedCell.classList.add("battlefield__cell_hidden")},700))):setTimeout(()=>{this.blocked=!1,e.style.backgroundImage="",this.previousClickedCell.style.backgroundImage="",this.previousClickedCell=null},700)):this.previousClickedCell=e}})}};customElements.define("game-dashboard",s),customElements.define("game-start",d),customElements.define("game-profile",a),customElements.define("game-setting",l),customElements.define("game-battlefield",r);var o=class extends HTMLElement{createdCallback(){this.dashboard=new s,this.start=new d,this.profile=new a,this.setting=new l,this.dashboard.renderBody(this.start),this.appendChild(this.dashboard),this.addListeners()}startTimer(t){let e=60*t;this.dashboard.timer.textContent=e.secondsToHhMmSs();var i=setInterval(()=>{e--,this.dashboard.timer.textContent=e.secondsToHhMmSs()},1e3);setTimeout(()=>{clearInterval(i),this.dispatchEvent(new CustomEvent("finishGame",{bubbles:!0,detail:{won:!1}}))},60*t*1e3)}addListeners(){this.addEventListener("fillClick",function(t){this.dashboard.renderBody(this.profile)}),this.addEventListener("newGame",function(t){this.profile.data?this.dashboard.renderBody(this.setting):this.dashboard.renderBody(this.profile)}),this.addEventListener("profileSaved",function(t){this.dashboard.renderBody(this.setting)}),this.addEventListener("settingSaved",function(t){let e=new r(t.detail.complexity,t.detail.background);this.dashboard.renderBody(e),this.dispatchEvent(new CustomEvent("startGame",{bubbles:!0}))}),this.addEventListener("startGame",t=>{this.startTimer(2)}),this.addEventListener("finishGame",t=>{let e=document.createElement("h2");e.classList.add("title"),t.detail.won?(this.profile.data.scores.push({date:new Date,score:t.detail.score}),this.profile.save(),e.textContent="Вы выиграли!"):e.textContent="Вы проиграли!",this.dashboard.renderBody(e)})}};Number.prototype.secondsToHhMmSs=function(){var t=Math.floor(this/3600),e=Math.floor((this-3600*t)/60),i=this-3600*t-60*e;return t<10&&(t="0"+t),e<10&&(e="0"+e),i<10&&(i="0"+i),t+":"+e+":"+i},Number.randomInt=function(t,e){return Math.floor(Math.random()*(e-t)+t)},Array.randomInt=function(t,e,i){return new Array(t).fill(0).map(t=>Number.randomInt(e,i))},document.registerElement("match-game",o),document.addEventListener("DOMContentLoaded",function(){})}]);
//# sourceMappingURL=bundle.js.map
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/dashboard.js","webpack:///./js/profile.js","webpack:///./js/setting.js","webpack:///./js/start.js","webpack:///./js/battlefield.js","webpack:///./js/game.js","webpack:///./js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","dashboard","HTMLElement","constructor","super","this","createdCallback","setAttribute","innerHTML","body","querySelector","addListeners","renderBody","element","appendChild","newGameButton","addEventListener","profileButton","ratingButton","profile","saveButton","form","event","checkValidity","preventDefault","data","firstName","lastName","email","save","window","localStorage","JSON","stringify","dispatchEvent","CustomEvent","detail","bubbles","setting","renderComplexityTable","rowNumber","colNumber","table","document","createElement","classList","add","tr","j","td","textContent","outerHTML","settingBody","target","contains","closest","complexity","dataset","background","parentElement","querySelectorAll","forEach","remove","start","startButton","battlefield","number","customElements","define","game","registerElement"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Dashboard extends HTMLElement { \r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n    createdCallback(){        \r\n        this.setAttribute('class', 'dashboard dashboard__content g-all-height');\r\n        this.innerHTML = `<div class=\"header\">\r\n                <div class=\"header__game\">\r\n                    <button class=\"button button_new-game\">New game</button>\r\n                </div>\r\n                <div class=\"header_logo\">\r\n                    <img class=\"logo\">\r\n                </div>\r\n                <div class=\"header__user\">\r\n                    <button class=\"button button_profile\">Profile</button>\r\n                    <button class=\"button button_rating\">Rating</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"dashboard__body\"></div>`;\r\n            \r\n        this.body = this.querySelector('.dashboard__body');\r\n        \r\n        this.addListeners();\r\n    }  \r\n\r\n    renderBody(element){            \r\n        this.body.innerHTML = '';\r\n        this.body.appendChild(element);\r\n        return this.body;\r\n    }\r\n\r\n    addListeners(){\r\n        this.newGameButton = this.querySelector('.button_new-game');\r\n        this.newGameButton.addEventListener('click', function(){\r\n\r\n        });\r\n        \r\n        this.profileButton = this.querySelector('.button_profile');\r\n        this.profileButton.addEventListener('click', function(){\r\n            \r\n        });\r\n\r\n        this.ratingButton = this.querySelector('.button_rating');\r\n        this.ratingButton.addEventListener('click', function(){\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","class Profile extends HTMLElement{ \r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n    \r\n    createdCallback(){  \r\n        this.setAttribute('class', 'profile g-all-height');\r\n        this.innerHTML = `<form class=\"profile__form form\">\r\n                <div class=\"input-block profile__input-block\">\r\n                    <label class=\"label\">Имя:</label>\r\n                    <input class=\"input\" name=\"firstName\" type=\"text\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\" >\r\n                    <label class=\"label\">Фамилия:</label>\r\n                    <input class=\"input\" name=\"lastName\" type=\"text\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\">\r\n                    <label class=\"label\">Email:</label>\r\n                    <input class=\"input\" name=\"email\" type=\"email\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\">\r\n                    <input type=\"submit\" class=\"save-button button\" value=\"Сохранить данные\"></button>\r\n                </div>\r\n            </form>`;\r\n        this.saveButton = this.querySelector('.save-button');\r\n        this.form = this.querySelector(\".form\");\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){\r\n        this.saveButton.addEventListener('click', (event) => {\r\n            if(!this.form.checkValidity())\r\n            {\r\n                event.preventDefault();  \r\n                this.data = {\r\n                    firstName: this.form.firstName,\r\n                    lastName: this.form.lastName, \r\n                    email: this.form.email\r\n                }\r\n                this.save();  \r\n            }                             \r\n        });\r\n    }   \r\n    \r\n    save(){\r\n        window.localStorage['currentUser'] = this.data.email;\r\n        window.localStorage[this.data.email] = JSON.stringify(this.data);\r\n        this.dispatchEvent(new CustomEvent('profileSaved', { detail: this.data, bubbles: true }));\r\n    }    \r\n}\r\n\r\n\r\n\r\nexport default Profile;","class Setting extends HTMLElement {\r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){  \r\n        this.setAttribute('class', 'setting g-all-height');\r\n        this.innerHTML = `<h1>Настройки игры</h2>\r\n        <div class=\"setting__body\">\r\n            <div class=\"setting__block setting__block_complexity\">\r\n                <h2 class=\"setting__title\">Сложность: </h2>\r\n                <div data-complexity=\"novice\" class=\"setting__item setting__item_novice\">                    \r\n                    ${this.renderComplexityTable(3, 3)}                    \r\n                </div>\r\n                <div data-complexity=\"advance\" class=\"setting__item setting__item_advance\">\r\n                    ${this.renderComplexityTable(6, 6)}\r\n                </div>\r\n                <div data-complexity=\"medium\" class=\"setting__item setting__item_medium\">\r\n                    ${this.renderComplexityTable(3, 6)}\r\n                </div>\r\n            </div>\r\n            <div class=\"setting__block setting__block_background\">\r\n                <h2 class=\"setting__title\">Рубашка: </h2>\r\n                <div data-background=\"cars\" class=\"setting__item setting__item_cars\">                    \r\n                </div>\r\n                <div data-background=\"football\" class=\"setting__item setting__item_football\">                    \r\n                </div>\r\n                <div data-background=\"got\" class=\"setting__item setting__item_got\">                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"setting__save-button button\">Сохранить и играть</button>\r\n        </div>`;\r\n        this.saveButton = this.querySelector('.setting__save-button');\r\n        this.addListeners();\r\n    }  \r\n\r\n    renderComplexityTable(rowNumber, colNumber){\r\n        let table = document.createElement('table');\r\n        table.classList.add('complexity');\r\n        for(let i = 1; i <= rowNumber; i++){\r\n            let tr = document.createElement('tr');\r\n            for(let j = 1; j <= colNumber; j++){\r\n                let td = document.createElement('td');\r\n                td.textContent = `${i} x ${j}`;\r\n                tr.appendChild(td);\r\n            }  \r\n            table.appendChild(tr);\r\n        }        \r\n        return table.outerHTML;\r\n    }\r\n\r\n    addListeners(){\r\n        this.settingBody = this.querySelector('.setting__body');\r\n        this.settingBody.addEventListener('click', (event) => { \r\n            let target = event.target.classList.contains('setting__item') ? event.target : event.target.closest('.setting__item');            \r\n            if(target){   \r\n                this.complexity = target.dataset.complexity ? target.dataset.complexity : this.complexity;\r\n                this.background = target.dataset.background ? target.dataset.background : this.background;\r\n                let items = target.parentElement.querySelectorAll('.setting__item');\r\n                items.forEach(element => {\r\n                    element.classList.remove('setting__item_selected');\r\n                });       \r\n                target.classList.add('setting__item_selected');\r\n            }\r\n        });       \r\n\r\n        this.saveButton.addEventListener('click', (event) => {\r\n            this.dispatchEvent(new CustomEvent('settingSaved', { \r\n                bubbles: true,\r\n                detail: {\r\n                    complexity: this.complexity, \r\n                    background: this.background \r\n                }                \r\n            }));\r\n        });       \r\n    }\r\n}\r\n\r\nexport default Setting;","class Start extends HTMLElement{\r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){  \r\n        this.classList.add('start', 'g-all-height');\r\n        this.innerHTML = ` <div class=\"greeting\">\r\n                Приветствую!\r\n            </div>\r\n            <div class=\"rules\">\r\n                <h2 class=\"title\">Правила игры: </h2>\r\n                <p class=\"rules__rule\">Вы должны найти все пары карт за 2 минуты.</p>\r\n                <p class=\"rules__rule\">Для старта необходимо ввести пользовательские данные.</p>\r\n            </div> \r\n            <div>\r\n                <button class=\"button button_start\">Заполнить данные</button>\r\n            </div>`;\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){\r\n        this.startButton = this.querySelector('.button_start');\r\n        this.startButton.addEventListener('click', function(event){\r\n            this.dispatchEvent(new CustomEvent('startClick', { bubbles: true, detail: this.event }));\r\n        });       \r\n    }\r\n}\r\n\r\nexport default Start;","\r\nclass Battlefield extends HTMLElement{\r\n    constructor(complexity, background){\r\n        super();\r\n        this.complexity = complexity;\r\n        this.background = background;\r\n        this.number = this.complexity === 'novice' ? 9 : this.complexity === 'medium' ? 18 : this.complexity === 'advance' ? 36 : 0;\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){          \r\n        this.setAttribute('class', `battlefield battlefield_${this.complexity} battlefield__content g-all-height`);\r\n        for(let i = 0; i < this.number; i++){\r\n            let element  = document.createElement('div');\r\n            element.setAttribute('class', `battlefield__cell battlefield__cell_${this.background}`);                             \r\n            this.appendChild(element);\r\n        }\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){        \r\n          \r\n    }\r\n}\r\n\r\nexport default Battlefield;\r\n","\r\nimport Dashboard from './dashboard';\r\nimport Profile from './profile';\r\nimport Setting from './setting';\r\nimport Start from './start';\r\nimport Battlefield from './battlefield';\r\n\r\ncustomElements.define('game-dashboard', Dashboard);\r\ncustomElements.define('game-start', Start);\r\ncustomElements.define('game-profile', Profile);\r\ncustomElements.define('game-setting', Setting);\r\ncustomElements.define('game-battlefield', Battlefield);\r\n\r\nclass Game extends HTMLElement {\r\n    createdCallback() {\r\n        this.dashboard = new Dashboard();\r\n        this.start = new Start();          \r\n        this.dashboard.renderBody(this.start);\r\n        this.appendChild(this.dashboard);\r\n        this.addListeners();\r\n    }\r\n\r\n    addListeners() {\r\n        this.addEventListener('startClick', function (event) {\r\n            this.profile = new Profile();\r\n            this.dashboard.renderBody(this.profile);\r\n        });\r\n\r\n        this.addEventListener('profileSaved', function (event) {\r\n            this.setting = new Setting();\r\n            this.dashboard.renderBody(this.setting);\r\n        });\r\n\r\n        this.addEventListener('settingSaved', function (event) {\r\n            this.battlefield = new Battlefield(event.detail.complexity, event.detail.background);\r\n            this.dashboard.renderBody(this.battlefield);\r\n        });\r\n    }\r\n}\r\n\r\nexport default Game;","import Game from './game.js'\r\n\r\ndocument.registerElement('match-game', Game);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n      \r\n});"],"sourceRoot":""}
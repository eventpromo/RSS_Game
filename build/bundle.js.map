{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/dashboard.js","webpack:///./js/profile.js","webpack:///./js/setting.js","webpack:///./js/greeting.js","webpack:///./js/battlefield.js","webpack:///./js/game.js","webpack:///./js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","dashboard","HTMLElement","constructor","super","this","createdCallback","setAttribute","innerHTML","body","querySelector","timer","addListeners","renderBody","element","appendChild","newGameButton","addEventListener","dispatchEvent","CustomEvent","bubbles","profileButton","ratingButton","CurrentUser","profile","data","window","localStorage","JSON","parse","firstName","lastName","email","score","saveButton","form","event","checkValidity","preventDefault","save","detail","stringify","setting","complexities","novice","x","y","medium","advance","renderComplexityTable","complexity","table","document","createElement","classList","add","tr","j","td","textContent","outerHTML","settingBody","target","contains","closest","dataset","background","parentElement","querySelectorAll","forEach","remove","greeting","fillButton","js_battlefield","size","previousClickedCell","blocked","left","fillIn","style","index","field","Array","fill","values","randomInt","concat","emptyCells","map","filter","length","Number","backgroundImage","details","won","setTimeout","customElements","define","game","startTimer","minutes","seconds","secondsToHhMmSs","timerId","setInterval","clearInterval","battlefield","title","scores","push","date","Date","hours","Math","floor","min","max","random","registerElement"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Dashboard extends HTMLElement { \r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n    createdCallback(){        \r\n        this.setAttribute('class', 'dashboard dashboard__content g-all-height');\r\n        this.innerHTML = `<div class=\"header\">\r\n                <div class=\"header__game\">\r\n                    <button class=\"button button_new-game\">New game</button>\r\n                </div>\r\n                <div class=\"header_timer\">\r\n                    <div class=\"timer\"></div>\r\n                </div>\r\n                <div class=\"header__user\">\r\n                    <button class=\"button button_profile\">Profile</button>\r\n                    <button class=\"button button_rating\">Rating</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"dashboard__body\"></div>`;            \r\n        this.body = this.querySelector('.dashboard__body');\r\n        this.timer = this.querySelector('.timer');\r\n        this.addListeners();\r\n    }  \r\n\r\n    renderBody(element){            \r\n        this.body.innerHTML = '';\r\n        this.body.appendChild(element);\r\n        return this.body;\r\n    }\r\n\r\n    addListeners(){\r\n        this.newGameButton = this.querySelector('.button_new-game');\r\n        this.newGameButton.addEventListener('click', () => {\r\n            this.dispatchEvent(new CustomEvent('newGame', { bubbles: true }));\r\n        });\r\n        \r\n        this.profileButton = this.querySelector('.button_profile');\r\n        this.profileButton.addEventListener('click', () => {\r\n            \r\n        });\r\n\r\n        this.ratingButton = this.querySelector('.button_rating');\r\n        this.ratingButton.addEventListener('click', () => {\r\n            \r\n        });         \r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","const CurrentUser = 'GameCurrentUser';\r\n\r\nclass Profile extends HTMLElement{ \r\n    constructor(){\r\n        super(); \r\n        const data = window.localStorage[CurrentUser];            \r\n        this.data = data ? JSON.parse(data) : {\r\n            firstName: '',\r\n            lastName: '', \r\n            email: '',\r\n            score: []         \r\n        };\r\n        this.createdCallback();\r\n    }\r\n    \r\n    createdCallback(){  \r\n        this.setAttribute('class', 'profile g-all-height');\r\n        this.innerHTML = `<form class=\"profile__form form\">\r\n                <div class=\"input-block profile__input-block\">\r\n                    <label class=\"label\">Имя:</label>\r\n                    <input class=\"input\" name=\"firstName\" type=\"text\" value=\"${this.data.firstName}\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\" >\r\n                    <label class=\"label\">Фамилия:</label>\r\n                    <input class=\"input\" name=\"lastName\" type=\"text\" value=\"${this.data.lastName}\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\">\r\n                    <label class=\"label\">Email:</label>\r\n                    <input class=\"input\" name=\"email\" type=\"email\" value=\"${this.data.email}\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\">\r\n                    <input type=\"submit\" class=\"save-button button\" value=\"Сохранить данные\"></button>\r\n                </div>\r\n            </form>`;\r\n        this.saveButton = this.querySelector('.save-button');\r\n        this.form = this.querySelector(\".form\");\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){\r\n        this.saveButton.addEventListener('click', (event) => {\r\n            if(this.form.checkValidity())\r\n            {\r\n                event.preventDefault();  \r\n                this.data.firstName = this.form.firstName.value;\r\n                this.data.lastName = this.form.lastName.value;\r\n                this.data.email = this.form.email.value;                   \r\n                this.save();\r\n                this.dispatchEvent(new CustomEvent('profileSaved', { detail: this.data, bubbles: true }));\r\n            }                             \r\n        });\r\n    } \r\n    \r\n    save(){\r\n        window.localStorage[CurrentUser] = JSON.stringify(this.data); \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Profile;","class Setting extends HTMLElement {\r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){  \r\n        this.complexities = {\r\n            novice: { x: 4, y : 3},\r\n            medium: { x: 6, y : 4},\r\n            advance: { x: 6, y : 6}\r\n        };\r\n        this.setAttribute('class', 'setting g-all-height');\r\n        this.innerHTML = `<h1>Настройки игры</h2>\r\n        <div class=\"setting__body\">\r\n            <div class=\"setting__block setting__block_complexity\">\r\n                <h2 class=\"setting__title\">Сложность: </h2>\r\n                <div data-complexity=\"novice\" class=\"setting__item setting__item_novice\">                    \r\n                    ${this.renderComplexityTable(this.complexities.novice)}                    \r\n                </div>\r\n                <div data-complexity=\"advance\" class=\"setting__item setting__item_advance\">\r\n                    ${this.renderComplexityTable(this.complexities.advance)}                    \r\n                </div>\r\n                <div data-complexity=\"medium\" class=\"setting__item setting__item_medium\">\r\n                    ${this.renderComplexityTable(this.complexities.medium)}                    \r\n                </div>\r\n            </div>\r\n            <div class=\"setting__block setting__block_background\">\r\n                <h2 class=\"setting__title\">Рубашка: </h2>\r\n                <div data-background=\"cars\" class=\"setting__item setting__item_cars\">                    \r\n                </div>\r\n                <div data-background=\"football\" class=\"setting__item setting__item_football\">                    \r\n                </div>\r\n                <div data-background=\"got\" class=\"setting__item setting__item_got\">                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"setting__save-button button\">Сохранить и играть</button>\r\n        </div>`;\r\n        this.saveButton = this.querySelector('.setting__save-button');\r\n        this.addListeners();\r\n    }  \r\n\r\n    renderComplexityTable(complexity){\r\n        let table = document.createElement('table');\r\n        table.classList.add('complexity');\r\n        for(let i = 1; i <= complexity.y; i++){\r\n            let tr = document.createElement('tr');\r\n            for(let j = 1; j <= complexity.x; j++){\r\n                let td = document.createElement('td');\r\n                td.textContent = `${i} x ${j}`;\r\n                tr.appendChild(td);\r\n            }  \r\n            table.appendChild(tr);\r\n        }        \r\n        return table.outerHTML;\r\n    }\r\n\r\n    addListeners(){\r\n        this.settingBody = this.querySelector('.setting__body');\r\n        this.settingBody.addEventListener('click', (event) => { \r\n            let target = event.target.classList.contains('setting__item') ? event.target : event.target.closest('.setting__item');            \r\n            if(target){   \r\n                this.complexity = target.dataset.complexity ? target.dataset.complexity : this.complexity;\r\n                this.background = target.dataset.background ? target.dataset.background : this.background;\r\n                let items = target.parentElement.querySelectorAll('.setting__item');\r\n                items.forEach(element => {\r\n                    element.classList.remove('setting__item_selected');\r\n                });       \r\n                target.classList.add('setting__item_selected');\r\n            }\r\n        });       \r\n\r\n        this.saveButton.addEventListener('click', (event) => {\r\n            this.dispatchEvent(new CustomEvent('settingSaved', { \r\n                bubbles: true,\r\n                detail: {\r\n                    complexity: this.complexities[this.complexity], \r\n                    background: this.background \r\n                }                \r\n            }));\r\n        });       \r\n    }\r\n}\r\n\r\nexport default Setting;","class Start extends HTMLElement{\r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){  \r\n        this.classList.add('start', 'g-all-height');\r\n        this.innerHTML = ` <div class=\"greeting\">\r\n                Приветствую!\r\n            </div>\r\n            <div class=\"rules\">\r\n                <h2 class=\"title\">Правила игры: </h2>\r\n                <p class=\"rules__rule\">Вы должны найти все пары карт за 2 минуты.</p>\r\n                <p class=\"rules__rule\">Для старта необходимо ввести пользовательские данные.</p>\r\n            </div> \r\n            <div>\r\n                <button class=\"button button_fillin\">Заполнить данные</button>\r\n            </div>`;\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){\r\n        this.fillButton = this.querySelector('.button_fillin');\r\n        this.fillButton.addEventListener('click', function(event){\r\n            this.dispatchEvent(new CustomEvent('fillClick', { bubbles: true, detail: this.event }));\r\n        });       \r\n    }\r\n}\r\n\r\nexport default Start;","\r\nclass Battlefield extends HTMLElement{\r\n    constructor(complexity, background){\r\n        super();\r\n        this.complexity = complexity;\r\n        this.background = background;\r\n        this.size = this.complexity.x * this.complexity.y;\r\n        this.previousClickedCell;  \r\n        this.blocked = false;   \r\n        this.left = this.size;\r\n        this.fillIn();\r\n        this.createdCallback();        \r\n    }\r\n\r\n    createdCallback(){          \r\n        this.setAttribute('class', `battlefield battlefield__content g-all-height`);\r\n        this.style = `grid-template: repeat(${this.complexity.y}, 1fr) / repeat(${this.complexity.x}, 1fr)`;\r\n        for(let i = 0; i < this.size; i++){\r\n            let element  = document.createElement('div');\r\n            element.setAttribute('class', `battlefield__cell battlefield__cell_${this.background}`); \r\n            element.dataset.index = i;                            \r\n            this.appendChild(element);\r\n        }\r\n        this.addListeners();\r\n    }  \r\n\r\n    fillIn(){\r\n        this.field = new Array(this.size).fill(0);\r\n        let values = Array.randomInt(this.size / 2, 1, 10);\r\n        values = values.concat(values);\r\n        values.forEach(element => {\r\n            const emptyCells = this.field.map((x, i) => {\r\n                return {\r\n                    value: x,\r\n                    index: i\r\n                };\r\n            }).filter(x => x.value === 0).map(x => x.index);            \r\n            if(emptyCells.length){\r\n                const index = emptyCells[Number.randomInt(0, emptyCells.length - 1)];\r\n                this.field[index] = element;    \r\n            }            \r\n        });\r\n    }\r\n\r\n    addListeners(){\r\n        this.addEventListener('click', (event) => {\r\n            let element = event.target;\r\n            if(element.classList.contains('battlefield__cell')){\r\n                if(element.classList.contains('battlefield__cell_hidden') \r\n                || element.style.backgroundImage\r\n                || this.blocked){\r\n                    return;\r\n                }\r\n                const index = element.dataset.index;\r\n                const value = this.field[index];\r\n                element.style.backgroundImage = `url(\"./img/${this.background}/${value}.png\")`;\r\n\r\n                if(!this.previousClickedCell){\r\n                    this.previousClickedCell = element;\r\n                }\r\n                else{\r\n                    this.blocked = true;\r\n                    const previousValue = this.field[this.previousClickedCell.dataset.index];\r\n                    if(value === previousValue){\r\n                        this.left = this.left - 2;\r\n                        if(this.left == 0){\r\n                            this.dispatchEvent(new CustomEvent('finishGame', { details: { score: this.size, won: true}, bubbles: true }));\r\n                        }else{\r\n                            this.blocked = false;\r\n                            setTimeout(() => {                                \r\n                                element.classList.add('battlefield__cell_hidden');\r\n                                this.previousClickedCell.classList.add('battlefield__cell_hidden');                            \r\n                            }, 700);\r\n                        }                        \r\n                    }else{\r\n                        setTimeout(() => {\r\n                            this.blocked = false;\r\n                            element.style.backgroundImage = '';\r\n                            this.previousClickedCell.style.backgroundImage = '';\r\n                            this.previousClickedCell = null;\r\n                        }, 700);\r\n                    }\r\n                }                \r\n            }\r\n        });        \r\n    }\r\n}\r\n\r\nexport default Battlefield;\r\n","\r\nimport Dashboard from './dashboard';\r\nimport Profile from './profile';\r\nimport Setting from './setting';\r\nimport Greeting from './greeting';\r\nimport Battlefield from './battlefield';\r\n\r\ncustomElements.define('game-dashboard', Dashboard);\r\ncustomElements.define('game-greeting', Greeting);\r\ncustomElements.define('game-profile', Profile);\r\ncustomElements.define('game-setting', Setting);\r\ncustomElements.define('game-battlefield', Battlefield);\r\n\r\nclass Game extends HTMLElement {\r\n    createdCallback() {\r\n        this.dashboard = new Dashboard();\r\n        this.greeting = new Greeting();   \r\n        this.profile = new Profile();      \r\n        this.setting = new Setting(); \r\n        this.dashboard.renderBody(this.greeting);\r\n        this.appendChild(this.dashboard);\r\n        this.addListeners();\r\n    }    \r\n\r\n    startTimer(minutes){        \r\n        let seconds = minutes * 60;\r\n        this.dashboard.timer.textContent = seconds.secondsToHhMmSs();\r\n        var timerId = setInterval(() => {\r\n            seconds--;\r\n            this.dashboard.timer.textContent = seconds.secondsToHhMmSs();          \r\n        }, 1000);\r\n                \r\n        setTimeout(() => {\r\n            clearInterval(timerId); \r\n            this.dispatchEvent(new CustomEvent('finishGame', { bubbles: true, detail: {\r\n                won: false\r\n            }}));  \r\n        }, minutes * 60 * 1000);\r\n    }    \r\n\r\n    addListeners() {\r\n        this.addEventListener('fillClick', function (event) {            \r\n            this.dashboard.renderBody(this.profile);\r\n        });\r\n\r\n        this.addEventListener('newGame', function (event) {   \r\n            if(this.profile.data){\r\n                this.dashboard.renderBody(this.setting);    \r\n            }else{\r\n                this.dashboard.renderBody(this.profile);\r\n            }            \r\n        });        \r\n\r\n        this.addEventListener('profileSaved', function (event) {                       \r\n            this.dashboard.renderBody(this.setting);\r\n        });\r\n\r\n        this.addEventListener('settingSaved', function (event) {\r\n            let battlefield = new Battlefield(event.detail.complexity, event.detail.background);\r\n            this.dashboard.renderBody(battlefield);\r\n            this.dispatchEvent(new CustomEvent('startGame', { bubbles: true }));           \r\n        });        \r\n\r\n        this.addEventListener('startGame', (event) => {            \r\n            this.startTimer(2);\r\n        }); \r\n\r\n        this.addEventListener('finishGame', (event) => {\r\n            let title = document.createElement('h2');\r\n            title.classList.add('title');  \r\n            if(event.detail.won) {\r\n                this.profile.data.scores.push({\r\n                    date: new Date(), \r\n                    score: event.detail.score\r\n                });\r\n                this.profile.save();\r\n\r\n                title.textContent = 'Вы выиграли!';\r\n            }else{\r\n                title.textContent = 'Вы проиграли!';\r\n            }         \r\n            this.dashboard.renderBody(title);     \r\n        });         \r\n    }\r\n}\r\n\r\nexport default Game;","import Game from './game.js'\r\n\r\nNumber.prototype.secondsToHhMmSs = function () {\r\n    var sec_num = this; // don't forget the second param\r\n    var hours = Math.floor(sec_num / 3600);\r\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n    var seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n    if (hours < 10) { hours = \"0\" + hours; }\r\n    if (minutes < 10) { minutes = \"0\" + minutes; }\r\n    if (seconds < 10) { seconds = \"0\" + seconds; }\r\n    return hours + ':' + minutes + ':' + seconds;\r\n}\r\n\r\nNumber.randomInt = function (min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nArray.randomInt = function (size, min, max) { \r\n    return new Array(size).fill(0).map(x => Number.randomInt(min, max));\r\n}\r\n\r\ndocument.registerElement('match-game', Game);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n});"],"sourceRoot":""}
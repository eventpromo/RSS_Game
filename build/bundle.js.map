{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/dashboard.js","webpack:///./js/profile.js","webpack:///./js/setting.js","webpack:///./js/greeting.js","webpack:///./js/battlefield.js","webpack:///./js/rating.js","webpack:///./js/game.js","webpack:///./js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","dashboard","HTMLElement","constructor","super","this","createdCallback","setAttribute","innerHTML","body","querySelector","timer","addListeners","renderBody","element","dispatchEvent","CustomEvent","bubbles","appendChild","setTimeout","newGameButton","addEventListener","profileButton","ratingButton","CurrentUser","profile","data","window","localStorage","JSON","parse","firstName","lastName","email","scores","saveButton","form","event","checkValidity","preventDefault","save","detail","stringify","setting","complexities","novice","x","y","medium","advance","renderComplexityTable","complexity","table","document","createElement","classList","add","tr","j","td","textContent","outerHTML","settingBody","target","contains","closest","dataset","background","parentElement","querySelectorAll","forEach","remove","greeting","fillButton","js_battlefield","size","fillIn","style","index","field","Array","fill","values","randomInt","emptyCells","map","filter","length","Number","animate","options","start","performance","now","requestAnimationFrame","time","timeFraction","duration","progress","timing","draw","pair","left","push","backgroundImage","previousValue","score","won","opacity","rating","title","sort","date","customElements","define","game","timerId","startTimer","minutes","seconds","secondsToHhMmSs","setInterval","endTimer","clearInterval","battlefield","Date","toLocaleDateString","hours","Math","floor","min","max","random","registerElement"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Dashboard extends HTMLElement { \r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n    createdCallback(){        \r\n        this.setAttribute('class', 'dashboard dashboard__content g-all-height');\r\n        this.innerHTML = `<div class=\"header\">\r\n                <div class=\"header__game\">\r\n                    <button class=\"button button_new-game\">Новая игра</button>\r\n                </div>\r\n                <div class=\"header_timer\">\r\n                    <div class=\"timer\"></div>\r\n                </div>\r\n                <div class=\"header__user\">\r\n                    <button class=\"button button_profile\">Профиль</button>\r\n                    <button class=\"button button_rating\">Результаты</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"dashboard__body\"></div>`;            \r\n        this.body = this.querySelector('.dashboard__body');\r\n        this.timer = this.querySelector('.timer');\r\n        this.addListeners();\r\n    }  \r\n\r\n    renderBody(element){       \r\n        this.dispatchEvent(new CustomEvent('renderingBody', { bubbles: true }));           \r\n        this.body.innerHTML = '';\r\n        this.body.appendChild(element);        \r\n        setTimeout(() => {\r\n            this.dispatchEvent(new CustomEvent('renderedBody', { bubbles: true }));    \r\n        }, 0);        \r\n        return this.body;\r\n    }\r\n\r\n    addListeners(){\r\n        this.newGameButton = this.querySelector('.button_new-game');\r\n        this.newGameButton.addEventListener('click', () => {\r\n            this.dispatchEvent(new CustomEvent('newGame', { bubbles: true }));\r\n        });\r\n        \r\n        this.profileButton = this.querySelector('.button_profile');\r\n        this.profileButton.addEventListener('click', () => {\r\n            this.dispatchEvent(new CustomEvent('profileClick', { bubbles: true }));\r\n        });\r\n\r\n        this.ratingButton = this.querySelector('.button_rating');\r\n        this.ratingButton.addEventListener('click', () => {\r\n            this.dispatchEvent(new CustomEvent('ratingClick', { bubbles: true }));\r\n        });         \r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","const CurrentUser = 'GameCurrentUser';\r\n\r\nclass Profile extends HTMLElement{ \r\n    constructor(){\r\n        super(); \r\n        const data = window.localStorage[CurrentUser];            \r\n        this.data = data ? JSON.parse(data) : {\r\n            firstName: '',\r\n            lastName: '', \r\n            email: '',\r\n            scores: []         \r\n        };\r\n        this.createdCallback();\r\n    }\r\n    \r\n    createdCallback(){  \r\n        this.setAttribute('class', 'profile g-all-height');\r\n        this.innerHTML = `<form class=\"profile__form form\">\r\n                <div class=\"input-block profile__input-block\">\r\n                    <label class=\"label\">Имя:</label>\r\n                    <input class=\"input\" name=\"firstName\" type=\"text\" value=\"${this.data.firstName}\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\" >\r\n                    <label class=\"label\">Фамилия:</label>\r\n                    <input class=\"input\" name=\"lastName\" type=\"text\" value=\"${this.data.lastName}\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\">\r\n                    <label class=\"label\">Email:</label>\r\n                    <input class=\"input\" name=\"email\" type=\"email\" value=\"${this.data.email}\" required>\r\n                </div>\r\n                <div class=\"input-block profile__input-block\">\r\n                    <input type=\"submit\" class=\"save-button button\" value=\"Сохранить данные\"></button>\r\n                </div>\r\n            </form>`;\r\n        this.saveButton = this.querySelector('.save-button');\r\n        this.form = this.querySelector(\".form\");\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){\r\n        this.saveButton.addEventListener('click', (event) => {\r\n            if(this.form.checkValidity())\r\n            {\r\n                event.preventDefault();  \r\n                this.data.firstName = this.form.firstName.value;\r\n                this.data.lastName = this.form.lastName.value;\r\n                this.data.email = this.form.email.value;                   \r\n                this.save();\r\n                this.dispatchEvent(new CustomEvent('profileSaved', { detail: this.data, bubbles: true }));\r\n            }                             \r\n        });\r\n    } \r\n    \r\n    save(){\r\n        window.localStorage[CurrentUser] = JSON.stringify(this.data); \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Profile;","class Setting extends HTMLElement {\r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){  \r\n        this.complexities = {\r\n            novice: { x: 4, y : 3},\r\n            medium: { x: 6, y : 4},\r\n            advance: { x: 6, y : 6}\r\n        };\r\n        this.setAttribute('class', 'setting g-all-height');\r\n        this.innerHTML = `<h1>Настройки игры</h2>\r\n        <div class=\"setting__body\">\r\n            <div class=\"setting__block setting__block_complexity\">\r\n                <h2 class=\"setting__title\">Сложность: </h2>\r\n                <div data-complexity=\"novice\" class=\"setting__item setting__item_novice\">                    \r\n                    ${this.renderComplexityTable(this.complexities.novice)}                    \r\n                </div>\r\n                <div data-complexity=\"advance\" class=\"setting__item setting__item_advance\">\r\n                    ${this.renderComplexityTable(this.complexities.advance)}                    \r\n                </div>\r\n                <div data-complexity=\"medium\" class=\"setting__item setting__item_medium\">\r\n                    ${this.renderComplexityTable(this.complexities.medium)}                    \r\n                </div>\r\n            </div>\r\n            <div class=\"setting__block setting__block_background\">\r\n                <h2 class=\"setting__title\">Рубашка: </h2>\r\n                <div data-background=\"cars\" class=\"setting__item setting__item_cars\">                    \r\n                </div>\r\n                <div data-background=\"football\" class=\"setting__item setting__item_football\">                    \r\n                </div>\r\n                <div data-background=\"got\" class=\"setting__item setting__item_got\">                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"setting__save-button button\">Сохранить и играть</button>\r\n        </div>`;\r\n        this.saveButton = this.querySelector('.setting__save-button');\r\n        this.addListeners();\r\n    }  \r\n\r\n    renderComplexityTable(complexity){\r\n        let table = document.createElement('table');\r\n        table.classList.add('complexity');\r\n        for(let i = 1; i <= complexity.y; i++){\r\n            let tr = document.createElement('tr');\r\n            for(let j = 1; j <= complexity.x; j++){\r\n                let td = document.createElement('td');\r\n                td.textContent = `${i} x ${j}`;\r\n                tr.appendChild(td);\r\n            }  \r\n            table.appendChild(tr);\r\n        }        \r\n        return table.outerHTML;\r\n    }\r\n\r\n    addListeners(){\r\n        this.settingBody = this.querySelector('.setting__body');\r\n        this.settingBody.addEventListener('click', (event) => { \r\n            let target = event.target.classList.contains('setting__item') ? event.target : event.target.closest('.setting__item');            \r\n            if(target){   \r\n                this.complexity = target.dataset.complexity ? target.dataset.complexity : this.complexity;\r\n                this.background = target.dataset.background ? target.dataset.background : this.background;\r\n                let items = target.parentElement.querySelectorAll('.setting__item');\r\n                items.forEach(element => {\r\n                    element.classList.remove('setting__item_selected');\r\n                });       \r\n                target.classList.add('setting__item_selected');\r\n            }\r\n        });       \r\n\r\n        this.saveButton.addEventListener('click', (event) => {\r\n            this.dispatchEvent(new CustomEvent('settingSaved', { \r\n                bubbles: true,\r\n                detail: {\r\n                    complexity: this.complexities[this.complexity], \r\n                    background: this.background \r\n                }                \r\n            }));\r\n        });       \r\n    }\r\n}\r\n\r\nexport default Setting;","class Greeting extends HTMLElement{\r\n    constructor(){\r\n        super();\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){  \r\n        this.classList.add('start', 'g-all-height');\r\n        this.innerHTML = ` <div class=\"greeting\">\r\n                Приветствую!\r\n            </div>\r\n            <div class=\"rules\">\r\n                <h2 class=\"title\">Правила игры: </h2>\r\n                <p class=\"rules__rule\">Вы должны найти все пары карт за 2 минуты.</p>\r\n                <p class=\"rules__rule\">Для старта необходимо ввести пользовательские данные.</p>\r\n            </div> \r\n            <div>\r\n                <button class=\"button button_fillin\">Заполнить данные</button>\r\n            </div>`;\r\n        this.addListeners();\r\n    }  \r\n\r\n    addListeners(){\r\n        this.fillButton = this.querySelector('.button_fillin');\r\n        this.fillButton.addEventListener('click', function(event){\r\n            this.dispatchEvent(new CustomEvent('fillClick', { bubbles: true, detail: this.event }));\r\n        });       \r\n    }\r\n}\r\n\r\nexport default Greeting;","\r\nclass Battlefield extends HTMLElement{\r\n    constructor(complexity, background){\r\n        super();\r\n        this.complexity = complexity;\r\n        this.background = background;\r\n        this.size = this.complexity.x * this.complexity.y;                          \r\n        this.fillIn();\r\n        this.createdCallback();        \r\n    }\r\n\r\n    createdCallback(){          \r\n        this.setAttribute('class', `battlefield battlefield__content g-all-height`);\r\n        this.style = `grid-template: repeat(${this.complexity.y}, 1fr) / repeat(${this.complexity.x}, 1fr)`;\r\n        for(let i = 0; i < this.size; i++){\r\n            let element  = document.createElement('div');\r\n            element.setAttribute('class', `battlefield__cell battlefield__cell_${this.background}`); \r\n            element.dataset.index = i;                            \r\n            this.appendChild(element);\r\n        }\r\n        this.addListeners();\r\n    }  \r\n\r\n    fillIn(){\r\n        this.field = new Array(this.size).fill(0);\r\n        let values = Array.randomInt(this.size / 2, 1, 10);\r\n        values = [...values, ...values];\r\n        values.forEach(element => {\r\n            const emptyCells = this.field.map((x, i) => {\r\n                return {\r\n                    value: x,\r\n                    index: i\r\n                };\r\n            }).filter(x => x.value === 0).map(x => x.index);            \r\n            if(emptyCells.length){\r\n                const index = emptyCells[Number.randomInt(0, emptyCells.length - 1)];\r\n                this.field[index] = element;    \r\n            }            \r\n        });\r\n    }\r\n\r\n    animate(options) {\r\n\r\n        var start = performance.now();\r\n      \r\n        requestAnimationFrame(function animate(time) {\r\n          // timeFraction от 0 до 1\r\n          var timeFraction = (time - start) / options.duration;\r\n          if (timeFraction > 1) timeFraction = 1;\r\n      \r\n          // текущее состояние анимации\r\n          var progress = options.timing(timeFraction)\r\n      \r\n          options.draw(progress);\r\n      \r\n          if (timeFraction < 1) {\r\n            requestAnimationFrame(animate);\r\n          }\r\n      \r\n        });\r\n      }\r\n\r\n    addListeners(){        \r\n        let pair = [];\r\n        let left = this.size;\r\n        this.addEventListener('click', (event) => {\r\n            let element = event.target;\r\n            if(element.classList.contains('battlefield__cell')){\r\n                if(pair.length === 2\r\n                || element == pair[0]\r\n                || element.classList.contains('battlefield__cell_hidden')){\r\n                    return;\r\n                }\r\n\r\n                pair.push(element);\r\n\r\n                const index = element.dataset.index;\r\n                const value = this.field[index];\r\n                element.classList.add('battlefield__cell_open');\r\n                setTimeout(() => {\r\n                    element.style.backgroundImage = `url(\"./img/${this.background}/${value}.png\")`; \r\n                }, 0.3);                               \r\n                if(pair.length === 2){\r\n                    const previousValue = this.field[pair[0].dataset.index];\r\n                    if(value === previousValue){\r\n                        left = left - 2;\r\n                        if(left == 0){\r\n                            this.dispatchEvent(new CustomEvent('finishGame', { detail: { score: this.size, won: true}, bubbles: true }));\r\n                        }else{\r\n                            this.animate({\r\n                                duration: 600,\r\n                                timing: function(timeFraction) {\r\n                                  return timeFraction;\r\n                                },\r\n                                draw: function(progress) {                                    \r\n                                    pair[0].style.opacity = 1 - progress;\r\n                                    pair[1].style.opacity = 1 - progress;\r\n                                }\r\n                              });\r\n                            setTimeout(() => {    \r\n                                pair[0].classList.add('battlefield__cell_hidden');\r\n                                pair[1].classList.add('battlefield__cell_hidden');                            \r\n                                pair = []; \r\n                            }, 700);\r\n                        }                        \r\n                    }else{\r\n                        element.classList.add('battlefield__cell_close');                        \r\n                        setTimeout(() => {                            \r\n                            pair[0].classList.remove('battlefield__cell_open', 'battlefield__cell_close');\r\n                            pair[1].classList.remove('battlefield__cell_open', 'battlefield__cell_close');                                                                                 \r\n                            setTimeout(() => {\r\n                                pair[0].style.backgroundImage = '';\r\n                                pair[1].style.backgroundImage = '';                            \r\n                                pair = [];                      \r\n                            }, 400);\r\n                        }, 700);\r\n                    }                                \r\n                }                \r\n            }\r\n        });        \r\n    }\r\n}\r\n\r\nexport default Battlefield;\r\n","class Rating extends HTMLElement{\r\n    constructor(scores){\r\n        super();\r\n        this.scores = scores;\r\n        this.createdCallback();\r\n    }\r\n\r\n    createdCallback(){     \r\n        let title = document.createElement('h2');\r\n        title.classList.add('title');  \r\n        title.textContent = 'Результаты:';\r\n        this.appendChild(title);\r\n\r\n        this.scores.sort(x => x.date).forEach(x => {\r\n            let score = document.createElement('h3');\r\n            score.textContent = `${x.date}: ${x.score}`;\r\n            this.appendChild(score);\r\n        });        \r\n    }      \r\n}\r\n\r\nexport default Rating;","\r\nimport Dashboard from './dashboard';\r\nimport Profile from './profile';\r\nimport Setting from './setting';\r\nimport Greeting from './greeting';\r\nimport Battlefield from './battlefield';\r\nimport Rating from './rating';\r\n\r\ncustomElements.define('game-dashboard', Dashboard);\r\ncustomElements.define('game-greeting', Greeting);\r\ncustomElements.define('game-profile', Profile);\r\ncustomElements.define('game-setting', Setting);\r\ncustomElements.define('game-battlefield', Battlefield);\r\ncustomElements.define('game-rating', Rating);\r\n\r\nclass Game extends HTMLElement {\r\n    createdCallback() {\r\n        this.dashboard = new Dashboard();\r\n        this.greeting = new Greeting();   \r\n        this.profile = new Profile();      \r\n        this.setting = new Setting(); \r\n        this.dashboard.renderBody(this.greeting);\r\n        this.timerId;\r\n        this.appendChild(this.dashboard);\r\n        this.addListeners();\r\n    }    \r\n\r\n    startTimer(minutes){        \r\n        let seconds = minutes * 60;\r\n        this.dashboard.timer.textContent = seconds.secondsToHhMmSs();\r\n        this.timerId = setInterval(() => {\r\n            seconds--;\r\n            this.dashboard.timer.textContent = seconds.secondsToHhMmSs();          \r\n        }, 1000);\r\n                \r\n        setTimeout(() => {  \r\n            this.endTimer();\r\n            this.dispatchEvent(new CustomEvent('finishGame', { bubbles: true, detail: {\r\n                won: false\r\n            }}));  \r\n        }, minutes * 60 * 1000);\r\n    }       \r\n\r\n    endTimer(){\r\n        clearInterval(this.timerId);\r\n        this.timerId = null;\r\n        this.dashboard.timer.textContent = '';  \r\n    }\r\n\r\n    addListeners() {\r\n        this.addEventListener('fillClick', function (event) {            \r\n            this.dashboard.renderBody(this.profile);\r\n        });\r\n\r\n        this.addEventListener('profileClick', function (event) {            \r\n            this.dashboard.renderBody(this.profile);\r\n        });\r\n\r\n        this.addEventListener('ratingClick', function (event) {            \r\n            this.dashboard.renderBody(new Rating(this.profile.data.scores));\r\n        });\r\n\r\n        this.addEventListener('newGame', function (event) {   \r\n            if(this.profile.data){\r\n                this.dashboard.renderBody(this.setting);    \r\n            }else{\r\n                this.dashboard.renderBody(this.profile);\r\n            }            \r\n        });        \r\n\r\n        this.addEventListener('profileSaved', function (event) {                       \r\n            this.dashboard.renderBody(this.setting);\r\n        });\r\n\r\n        this.addEventListener('settingSaved', function (event) {\r\n            let battlefield = new Battlefield(event.detail.complexity, event.detail.background);\r\n            this.dashboard.renderBody(battlefield);\r\n            this.dispatchEvent(new CustomEvent('startGame', { bubbles: true }));           \r\n        });        \r\n\r\n        this.addEventListener('startGame', (event) => {            \r\n            this.startTimer(2);\r\n        }); \r\n\r\n        this.addEventListener('renderingBody', (event) => {  \r\n            if(this.timerId){\r\n                this.endTimer(); \r\n                this.profile.data.scores.push({\r\n                    date: new Date().toLocaleDateString(\"en-US\"), \r\n                    score: 0\r\n                });                     \r\n            }            \r\n        }); \r\n\r\n        this.addEventListener('finishGame', (event) => {\r\n            let title = document.createElement('h2');\r\n            title.classList.add('title');  \r\n            let score = 0;\r\n            if(event.detail.won) {                                \r\n                score = event.detail.score;\r\n                title.textContent = 'Вы выиграли!';\r\n                clearInterval(this.timerId); \r\n            }else{               \r\n                title.textContent = 'Вы проиграли!';\r\n            }   \r\n            this.profile.data.scores.push({\r\n                date: new Date().toLocaleDateString(\"en-US\"), \r\n                score: score\r\n            });      \r\n            this.dashboard.renderBody(title);     \r\n        });         \r\n    }\r\n}\r\n\r\nexport default Game;","import Game from './game.js'\r\n\r\nNumber.prototype.secondsToHhMmSs = function () {\r\n    var sec_num = this; // don't forget the second param\r\n    var hours = Math.floor(sec_num / 3600);\r\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n    var seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n    if (hours < 10) { hours = \"0\" + hours; }\r\n    if (minutes < 10) { minutes = \"0\" + minutes; }\r\n    if (seconds < 10) { seconds = \"0\" + seconds; }\r\n    return hours + ':' + minutes + ':' + seconds;\r\n}\r\n\r\nNumber.randomInt = function (min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nArray.randomInt = function (size, min, max) { \r\n    return new Array(size).fill(0).map(x => Number.randomInt(min, max));\r\n}\r\n\r\ndocument.registerElement('match-game', Game);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n});"],"sourceRoot":""}